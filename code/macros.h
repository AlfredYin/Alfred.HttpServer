#ifndef code_macros_h
#define code_macros_h

/*
macros.h 是一个头文件，其中定义了一些宏（macros）。
在C或C++编程中，宏是一种预处理器指令，用于在编译前进行文本替换。
这种替换可以用于简化代码、提高代码的可读性，或者引入一些特定的编译器指令。

这段代码定义了两个宏 `likely` 和 `unlikely`，用于在编写代码时对条件表达式的期望进行提示，以提高分支预测的准确性。
在很多情况下，处理器会通过分支预测来优化执行速度。通过使用这两个宏，程序员可以提示编译器条件表达式的可能性，
帮助编译器更准确地进行分支预测。
这对于性能敏感的代码段（例如循环或者条件判断频繁执行的地方）可能会有一些优势。
具体来说：
- `likely(x)` 宏表示条件 `x` 很可能为真。`__builtin_expect` 函数是一个GCC内建函数，用于提示编译器条件表达式的期望。
第二个参数为期望的值，这里是1（真）。
- `unlikely(x)` 宏表示条件 `x` 很可能为假。同样使用 `__builtin_expect`，但是期望的值是0（假）。
在使用这两个宏时，编译器可以根据程序员的提示进行优化，提高代码的执行效率。
这在一些需要极致性能的场景下可能是有用的，但在一般情况下，现代编译器已经能够进行很好的优化，手动提示这些信息并不总是必需的。
*/

#define likely(x)	__builtin_expect(!!(x), 1)
#define unlikely(x)	__builtin_expect(!!(x), 0)

#endif
